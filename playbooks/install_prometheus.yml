---
- name: Install Prometheus
  hosts: localhost
  become: yes
  vars:
    prometheus_version: "2.38.0"
    prometheus_web_listen_address: "0.0.0.0:9090"
    prometheus_storage_retention: "30d"
    prometheus_template_path: "~/ansible/playbooks/templates/"
  tasks:
    - name: Create Prometheus system group
      group:
        name: prometheus
        system: yes
        state: present

    - name: Create Prometheus system user
      user:
        name: prometheus
        system: yes
        group: prometheus
        createhome: no
        shell: /sbin/nologin

    - name: Download Prometheus
      get_url:
        url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
        dest: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"

    - name: Extract Prometheus archive
      unarchive:
        src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
        dest: /tmp
        remote_src: yes

    - name: Move Prometheus binaries
      copy:
        src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/{{ item }}"
        dest: "/usr/local/bin/{{ item }}"
        owner: prometheus
        group: prometheus
        mode: '0755'
        remote_src: yes
      loop:
        - prometheus
        - promtool

    - name: Create Prometheus configuration directories
      file:
        path: "{{ item }}"
        state: directory
        owner: prometheus
        group: prometheus
        mode: '0755'
      loop:
        - /etc/prometheus
        - /var/lib/prometheus

    - name: Create Prometheus configuration
      template:
        src: "{{ prometheus_template_path }}prometheus.yml.j2"
        dest: /etc/prometheus/prometheus.yml
        owner: prometheus
        group: prometheus
        mode: '0644'
      notify: Restart Prometheus

    - name: Create Prometheus systemd service
      template:
        src: "{{ prometheus_template_path }}prometheus.service.j2"
        dest: /etc/systemd/system/prometheus.service
        owner: root
        group: root
        mode: '0644'
      notify: Restart Prometheus

    - name: Enable and start Prometheus service
      systemd:
        name: prometheus
        state: started
        enabled: yes
        daemon_reload: yes

  handlers:
    - name: Restart Prometheus
      systemd:
        name: prometheus
        state: restarted

- name: Install Node Exporter
  hosts: nodes
  become: yes
  vars:
    node_exporter_version: "1.3.1"
    prometheus_template_path: "~/ansible/playbooks/templates/"
  tasks:
    - name: Create Node Exporter system group
      group:
        name: node_exporter
        system: yes
        state: present

    - name: Create Node Exporter system user
      user:
        name: node_exporter
        system: yes
        group: node_exporter
        createhome: no
        shell: /sbin/nologin

    - name: Download Node Exporter
      get_url:
        url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
        dest: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"

    - name: Extract Node Exporter archive
      unarchive:
        src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
        dest: /tmp
        remote_src: yes

    - name: Move Node Exporter binary
      copy:
        src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter"
        dest: "/usr/local/bin/node_exporter"
        owner: node_exporter
        group: node_exporter
        mode: '0755'
        remote_src: yes

    - name: Create Node Exporter systemd service
      template:
        src: "{{ prometheus_template_path }}node_exporter.service.j2"
        dest: /etc/systemd/system/node_exporter.service
        owner: root
        group: root
        mode: '0644'
      notify: Restart Node Exporter

    - name: Enable and start Node Exporter service
      systemd:
        name: node_exporter
        state: started
        enabled: yes
        daemon_reload: yes

  handlers:
    - name: Restart Node Exporter
      systemd:
        name: node_exporter
        state: restarted